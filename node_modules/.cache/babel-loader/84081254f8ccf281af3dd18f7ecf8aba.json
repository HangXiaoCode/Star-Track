{"ast":null,"code":"var _jsxFileName = \"/Users/hangxiao/Desktop/sapcex/src/components/Main.js\";\nimport React, { Component } from 'react';\nimport SatSetting from './SatSetting';\nimport SatelliteList from './SatelliteList';\nimport { NEARBY_SATELLITE, STARLINK_CATEGORY, SAT_API_KEY, SATELLITE_POSITION_URL } from '../constant';\nimport WorldMap from './WorldMap';\nimport Axios from 'axios';\n\nclass Main extends Component {\n  constructor() {\n    super();\n\n    this.trackOnClick = duration => {\n      const {\n        observerLat,\n        observerLong,\n        observerAlt\n      } = this.state.setting;\n      const endTime = duration * 60;\n      this.setState({\n        loadingSatPositions: true\n      });\n      const urls = this.state.selected.map(sat => {\n        const {\n          satid\n        } = sat;\n        const url = `${SATELLITE_POSITION_URL}/${satid}/${observerLat}/${observerLong}/${observerAlt}/${endTime}/&apiKey=${SAT_API_KEY}`;\n        return Axios.get(url);\n      });\n      Axios.all(urls).then(Axios.spread((...args) => {\n        return args.map(item => item.data);\n      })).then(res => {\n        this.setState({\n          satPositions: res,\n          loadingSatPositions: false\n        });\n      }).catch(e => {\n        console.log('err in fetch satellite position -> ', e.message);\n      });\n    };\n\n    this.addOrRemove = (item, status) => {\n      let {\n        selected: list\n      } = this.state;\n      const found = list.some(entry => entry.satid === item.satid);\n\n      if (status && !found) {\n        list.push(item);\n      }\n\n      if (!status && found) {\n        list = list.filter(entry => {\n          return entry.satid !== item.satid;\n        });\n      }\n\n      console.log(list);\n      this.setState({\n        selected: list\n      });\n    };\n\n    this.showNearbySatellite = setting => {\n      this.setState({\n        setting: setting\n      });\n    };\n\n    this.fetchSatellite = setting => {\n      const {\n        observerLat,\n        observerLong,\n        observerAlt,\n        radius\n      } = setting; //destructure, can call setting.xxx \n\n      const url = `${NEARBY_SATELLITE}/${observerLat}/${observerLong}/${observerAlt}/${radius}/${STARLINK_CATEGORY}/&apiKey=${SAT_API_KEY}`;\n      this.setState({\n        loadingSatellites: true\n      });\n      Axios.get(url).then(response => {\n        this.setState({\n          satInfo: response.data,\n          loadingSatellites: false\n        });\n      }).catch(error => {\n        console.log('err in fetch satellite -> ', error);\n        this.setState({\n          loadingSatellites: false\n        });\n      });\n    };\n\n    this.state = {\n      loadingSatellites: false,\n      selected: [],\n      loadingSatPositions: false,\n      setting: undefined\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left-side\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SatSetting, {\n      onShow: this.showNearbySatellite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(SatelliteList, {\n      satInfo: this.state.satInfo,\n      loading: this.state.loadingSatellites,\n      onSelectionChange: this.addOrRemove,\n      disableTrack: this.state.selected.length === 0,\n      trackOnclick: this.trackOnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right-side\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(WorldMap, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/hangxiao/Desktop/sapcex/src/components/Main.js"],"names":["React","Component","SatSetting","SatelliteList","NEARBY_SATELLITE","STARLINK_CATEGORY","SAT_API_KEY","SATELLITE_POSITION_URL","WorldMap","Axios","Main","constructor","trackOnClick","duration","observerLat","observerLong","observerAlt","state","setting","endTime","setState","loadingSatPositions","urls","selected","map","sat","satid","url","get","all","then","spread","args","item","data","res","satPositions","catch","e","console","log","message","addOrRemove","status","list","found","some","entry","push","filter","showNearbySatellite","fetchSatellite","radius","loadingSatellites","response","satInfo","error","undefined","render","length"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport SatSetting from './SatSetting';\nimport SatelliteList from './SatelliteList';\nimport { NEARBY_SATELLITE, STARLINK_CATEGORY, SAT_API_KEY, \n    SATELLITE_POSITION_URL  } from '../constant';\nimport WorldMap from './WorldMap';\nimport Axios from 'axios';\n\nclass Main extends Component {\n    constructor(){\n        super();\n        this.state = {\n            loadingSatellites: false,\n            selected: [],\n            loadingSatPositions: false,\n            setting: undefined,\n        }\n    }\n\n    trackOnClick = (duration) => {\n        const { observerLat, observerLong, observerAlt } = this.state.setting;\n        const endTime = duration * 60;\n        this.setState({ loadingSatPositions: true });\n        const urls = this.state.selected.map( sat => {\n            const { satid } = sat;\n            const url = `${SATELLITE_POSITION_URL}/${satid}/${observerLat}/${observerLong}/${observerAlt}/${endTime}/&apiKey=${SAT_API_KEY}`;\n            return Axios.get(url);\n        });\n  \n        Axios.all(urls)\n          .then(\n            Axios.spread((...args) => {\n                return args.map(item => item.data);\n            })\n          )\n          .then( res => {\n              this.setState({\n                  satPositions: res,\n                  loadingSatPositions: false,\n              });\n          })\n          .catch( e => {\n              console.log('err in fetch satellite position -> ', e.message);\n        })\n  \n    }\n  \n      addOrRemove = (item, status) => {\n        let { selected: list } = this.state;\n        const found = list.some( entry => entry.satid === item.satid);\n  \n        if(status && !found){\n            list.push(item)\n        }\n  \n        if(!status && found){\n            list = list.filter( entry => {\n                return entry.satid !== item.satid;\n            });\n        }\n        \n        console.log(list);\n        this.setState({\n          selected: list\n        })\n    }\n\n    showNearbySatellite = (setting) => {\n        this.setState({\n            setting: setting,\n          })\n      }\n  \n      fetchSatellite = (setting) => {\n        const {observerLat, observerLong, observerAlt, radius} = setting; //destructure, can call setting.xxx \n        const url = `${NEARBY_SATELLITE}/${observerLat}/${observerLong}/${observerAlt}/${radius}/${STARLINK_CATEGORY}/&apiKey=${SAT_API_KEY}`;\n  \n        this.setState({\n            loadingSatellites: true,\n        })\n\n        Axios.get(url)\n            .then(response => {\n                this.setState({\n                    satInfo: response.data,\n                    loadingSatellites: false,\n                })\n            })\n            .catch(error => {\n                console.log('err in fetch satellite -> ', error);\n                this.setState({\n                    loadingSatellites: false,\n                })\n            })\n      }\n  \n  \n    render() {\n        return (\n            <div className='main'>\n                <div className=\"left-side\">\n                    <SatSetting onShow={this.showNearbySatellite} />\n                    <SatelliteList satInfo={this.state.satInfo} \n                        loading={this.state.loadingSatellites} \n                        onSelectionChange={this.addOrRemove}\n                        disableTrack={this.state.selected.length === 0}\n                        trackOnclick={this.trackOnClick}\n                    />\n                </div>\n                <div className=\"right-side\">\n                    <WorldMap />\n                </div>\n            </div>\n        );\n    }\n}\nexport default Main;"]},"metadata":{},"sourceType":"module"}